// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file model.proto (package trainiac.model, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file model.proto.
 */
export const file_model: GenFile = /*@__PURE__*/
  fileDesc("Cgttb2RlbC5wcm90bxIOdHJhaW5pYWMubW9kZWwilwEKD0xvY2FsaXplZFN0cmluZxI9Cgdsb2NhbGVzGAEgAygLMiwudHJhaW5pYWMubW9kZWwuTG9jYWxpemVkU3RyaW5nLkxvY2FsZXNFbnRyeRIVCg1kZWZhdWx0X3ZhbHVlGAIgASgJGi4KDExvY2FsZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIq8BCgVNb2RlbBIpCghzdGF0aW9ucxgBIAMoCzIXLnRyYWluaWFjLm1vZGVsLlN0YXRpb24SKQoIcmFpbHdheXMYAiADKAsyFy50cmFpbmlhYy5tb2RlbC5SYWlsd2F5EiMKBWxpbmVzGAMgAygLMhQudHJhaW5pYWMubW9kZWwuTGluZRIrCgljb3JyaWRvcnMYBCADKAsyGC50cmFpbmlhYy5tb2RlbC5Db3JyaWRvciLkAQoMVHJhY2tSYWlsd2F5Eg8KB3JhaWx3YXkYASABKAkSOQoJZGlyZWN0aW9uGAIgASgOMiYudHJhaW5pYWMubW9kZWwuVHJhY2tSYWlsd2F5LkRpcmVjdGlvbiKHAQoJRGlyZWN0aW9uEhkKFURJUkVDVElPTl9VTlNQRUNJRklFRBAAEhgKFFNJTkdMRV9UUkFDS19JTkJPVU5EEAESGQoVU0lOR0xFX1RSQUNLX09VVEJPVU5EEAISGAoUU0lOR0xFX1RSQUNLX1RXT19XQVkQAxIQCgxET1VCTEVfVFJBQ0sQBCKoAgoQVHJhY2tBcnJhbmdlbWVudBI0CgVub2RlcxgBIAMoCzIlLnRyYWluaWFjLm1vZGVsLlRyYWNrQXJyYW5nZW1lbnQuTm9kZRrdAQoETm9kZRIuCgljb25jb3Vyc2UYASABKAsyGS50cmFpbmlhYy5tb2RlbC5Db25jb3Vyc2VIABI5Cg9tdWx0aV9jb25jb3Vyc2UYAiABKAsyHi50cmFpbmlhYy5tb2RlbC5NdWx0aUNvbmNvdXJzZUgAEjQKDGludGVybG9ja2luZxgDIAEoCzIcLnRyYWluaWFjLm1vZGVsLkludGVybG9ja2luZ0gAEiwKCHRlcm1pbnVzGAQgASgLMhgudHJhaW5pYWMubW9kZWwuVGVybWludXNIAEIGCgRub2RlIuoBCglDb25jb3Vyc2USDAoEbmFtZRgBIAEoCRI1CgxkaXNwbGF5X25hbWUYAiABKAsyHy50cmFpbmlhYy5tb2RlbC5Mb2NhbGl6ZWRTdHJpbmcSLwoGdHJhY2tzGAQgAygLMh8udHJhaW5pYWMubW9kZWwuQ29uY291cnNlLlRyYWNrGmcKBVRyYWNrEi4KCGluY29taW5nGAEgASgLMhwudHJhaW5pYWMubW9kZWwuVHJhY2tSYWlsd2F5Ei4KCG91dGdvaW5nGAIgASgLMhwudHJhaW5pYWMubW9kZWwuVHJhY2tSYWlsd2F5IkUKDk11bHRpQ29uY291cnNlEjMKEG5hbWVkX2NvbmNvdXJzZXMYASADKAsyGS50cmFpbmlhYy5tb2RlbC5Db25jb3Vyc2UirQEKDEludGVybG9ja2luZxIyCgZ0cmFja3MYBCADKAsyIi50cmFpbmlhYy5tb2RlbC5JbnRlcmxvY2tpbmcuVHJhY2saaQoFVHJhY2sSLwoJaW5jb21pbmdzGAIgAygLMhwudHJhaW5pYWMubW9kZWwuVHJhY2tSYWlsd2F5Ei8KCW91dGdvaW5ncxgDIAMoCzIcLnRyYWluaWFjLm1vZGVsLlRyYWNrUmFpbHdheSI7CghUZXJtaW51cxIvCglpbmNvbWluZ3MYASADKAsyHC50cmFpbmlhYy5tb2RlbC5UcmFja1JhaWx3YXkixQIKB1N0YXRpb24SDAoEbmFtZRgBIAEoCRI1CgxkaXNwbGF5X25hbWUYAiABKAsyHy50cmFpbmlhYy5tb2RlbC5Mb2NhbGl6ZWRTdHJpbmcSGwoTZGlyZWN0aW9uX3JlZmVyZW5jZRgDIAEoCRI7ChF0cmFja19hcnJhbmdlbWVudBgEIAEoCzIgLnRyYWluaWFjLm1vZGVsLlRyYWNrQXJyYW5nZW1lbnQSMAoHc2VydmljZRgFIAEoDjIfLnRyYWluaWFjLm1vZGVsLlN0YXRpb24uU2VydmljZSJpCgdTZXJ2aWNlEhcKE1NFUlZJQ0VfVU5TUEVDSUZJRUQQABIKCgZDTE9TRUQQARIKCgZTSUdOQUwQAhIJCgVDQVJHTxADEg0KCVBBU1NFTkdFUhAEEhMKD1BBU1NFTkdFUl9DQVJHTxAFIsUECgtSYWlsd2F5U3BlYxIUCgxkZXNpZ25fc3BlZWQYASABKAUSNAoHc2VydmljZRgCIAEoDjIjLnRyYWluaWFjLm1vZGVsLlJhaWx3YXlTcGVjLlNlcnZpY2USPwoNb3BlcmF0ZV9zdGF0ZRgDIAEoDjIoLnRyYWluaWFjLm1vZGVsLlJhaWx3YXlTcGVjLk9wZXJhdGVTdGF0ZRIwCgV0cmFjaxgEIAEoDjIhLnRyYWluaWFjLm1vZGVsLlJhaWx3YXlTcGVjLlRyYWNrEjYKCGhpZXJhY2h5GAUgASgOMiQudHJhaW5pYWMubW9kZWwuUmFpbHdheVNwZWMuSGllcmFjaHkiUQoHU2VydmljZRIXChNTRVJWSUNFX1VOU1BFQ0lGSUVEEAASDQoJUEFTU0VOR0VSEAESCQoFQ0FHUk8QAhITCg9QQVNTRU5HRVJfQ0FSR08QAyJdCgxPcGVyYXRlU3RhdGUSHQoZT1BFUkFURV9TVEFURV9VTlNQRUNJRklFRBAAEg0KCU9QRVJBVElORxABEhAKDENPTlNUUlVDVElORxACEg0KCURFU0lHTklORxADIkIKBVRyYWNrEhUKEVRSQUNLX1VOU1BFQ0lGSUVEEAASEAoMU0lOR0xFX1RSQUNLEAESEAoMRE9VQkxFX1RSQUNLEAIiSQoISGllcmFjaHkSGAoUSElFUkFDSFlfVU5TUEVDSUZJRUQQABIICgRNQUlOEAESCgoGQlJBTkNIEAISDQoJQ09OTkVDVE9SEAMi3AIKCEludGVydmFsEkYKEWV4aXN0aW5nX2ludGVydmFsGAEgASgLMikudHJhaW5pYWMubW9kZWwuSW50ZXJ2YWwuRXhpc3RpbmdJbnRlcnZhbEgAEjwKDG5ld19pbnRlcnZhbBgCIAEoCzIkLnRyYWluaWFjLm1vZGVsLkludGVydmFsLk5ld0ludGVydmFsSAASOgoVcmFpbHdheV9zcGVjX292ZXJyaWRlGAMgASgLMhsudHJhaW5pYWMubW9kZWwuUmFpbHdheVNwZWMaYQoQRXhpc3RpbmdJbnRlcnZhbBIPCgdyYWlsd2F5GAEgASgJEhUKDXN0YXJ0X3N0YXRpb24YAiABKAkSEwoLZW5kX3N0YXRpb24YAyABKAkSEAoIdXBncmFkZWQYBCABKAgaHwoLTmV3SW50ZXJ2YWwSEAoIc3RhdGlvbnMYAiADKAlCCgoIaW50ZXJ2YWwiNAoFUm91dGUSKwoJaW50ZXJ2YWxzGAEgAygLMhgudHJhaW5pYWMubW9kZWwuSW50ZXJ2YWwipQIKB1JhaWx3YXkSDAoEbmFtZRgBIAEoCRI1CgxkaXNwbGF5X25hbWUYAiABKAsyHy50cmFpbmlhYy5tb2RlbC5Mb2NhbGl6ZWRTdHJpbmcSMQoMcmFpbHdheV9zcGVjGAMgASgLMhsudHJhaW5pYWMubW9kZWwuUmFpbHdheVNwZWMSNQoKbmFtZV9zdGF0ZRgEIAEoDjIhLnRyYWluaWFjLm1vZGVsLlJhaWx3YXkuTmFtZVN0YXRlEiQKBXJvdXRlGAUgASgLMhUudHJhaW5pYWMubW9kZWwuUm91dGUiRQoJTmFtZVN0YXRlEhwKGFJFQ09SRF9TVEFURV9VTlNQRUNJRklFRBAAEgoKBkFDVElWRRABEg4KCkRFUFJFQ0FURUQQAiJxCgRMaW5lEgwKBG5hbWUYASABKAkSNQoMZGlzcGxheV9uYW1lGAIgASgLMh8udHJhaW5pYWMubW9kZWwuTG9jYWxpemVkU3RyaW5nEiQKBXJvdXRlGAMgASgLMhUudHJhaW5pYWMubW9kZWwuUm91dGUidAoIQ29ycmlkb3ISDAoEbmFtZRgBIAEoCRI1CgxkaXNwbGF5X25hbWUYAiABKAsyHy50cmFpbmlhYy5tb2RlbC5Mb2NhbGl6ZWRTdHJpbmcSIwoFbGluZXMYAyADKAsyFC50cmFpbmlhYy5tb2RlbC5MaW5lYgZwcm90bzM");

/**
 * The generic message for localized strings.
 *
 * @generated from message trainiac.model.LocalizedString
 */
export type LocalizedString = Message<"trainiac.model.LocalizedString"> & {
  /**
   * A map from language codes to the localized strings.
   *
   * @generated from field: map<string, string> locales = 1;
   */
  locales: { [key: string]: string };

  /**
   * The default value to use when the locale is not yet supported,
   * or no locale information is given.
   *
   * @generated from field: string default_value = 2;
   */
  defaultValue: string;
};

/**
 * Describes the message trainiac.model.LocalizedString.
 * Use `create(LocalizedStringSchema)` to create a new message.
 */
export const LocalizedStringSchema: GenMessage<LocalizedString> = /*@__PURE__*/
  messageDesc(file_model, 0);

/**
 * The data model of a transit diagram.
 *
 * @generated from message trainiac.model.Model
 */
export type Model = Message<"trainiac.model.Model"> & {
  /**
   * @generated from field: repeated trainiac.model.Station stations = 1;
   */
  stations: Station[];

  /**
   * @generated from field: repeated trainiac.model.Railway railways = 2;
   */
  railways: Railway[];

  /**
   * @generated from field: repeated trainiac.model.Line lines = 3;
   */
  lines: Line[];

  /**
   * @generated from field: repeated trainiac.model.Corridor corridors = 4;
   */
  corridors: Corridor[];
};

/**
 * Describes the message trainiac.model.Model.
 * Use `create(ModelSchema)` to create a new message.
 */
export const ModelSchema: GenMessage<Model> = /*@__PURE__*/
  messageDesc(file_model, 1);

/**
 * The Railway that connects to a track at a station.
 *
 * @generated from message trainiac.model.TrackRailway
 */
export type TrackRailway = Message<"trainiac.model.TrackRailway"> & {
  /**
   * The name of the railway that connects to the track.
   *
   * @generated from field: string railway = 1;
   */
  railway: string;

  /**
   * The direction of the railway.
   *
   * @generated from field: trainiac.model.TrackRailway.Direction direction = 2;
   */
  direction: TrackRailway_Direction;
};

/**
 * Describes the message trainiac.model.TrackRailway.
 * Use `create(TrackRailwaySchema)` to create a new message.
 */
export const TrackRailwaySchema: GenMessage<TrackRailway> = /*@__PURE__*/
  messageDesc(file_model, 2);

/**
 * @generated from enum trainiac.model.TrackRailway.Direction
 */
export enum TrackRailway_Direction {
  /**
   * @generated from enum value: DIRECTION_UNSPECIFIED = 0;
   */
  DIRECTION_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SINGLE_TRACK_INBOUND = 1;
   */
  SINGLE_TRACK_INBOUND = 1,

  /**
   * @generated from enum value: SINGLE_TRACK_OUTBOUND = 2;
   */
  SINGLE_TRACK_OUTBOUND = 2,

  /**
   * @generated from enum value: SINGLE_TRACK_TWO_WAY = 3;
   */
  SINGLE_TRACK_TWO_WAY = 3,

  /**
   * @generated from enum value: DOUBLE_TRACK = 4;
   */
  DOUBLE_TRACK = 4,
}

/**
 * Describes the enum trainiac.model.TrackRailway.Direction.
 */
export const TrackRailway_DirectionSchema: GenEnum<TrackRailway_Direction> = /*@__PURE__*/
  enumDesc(file_model, 2, 0);

/**
 * Defines how tracks are arranged at a station.
 *
 * @generated from message trainiac.model.TrackArrangement
 */
export type TrackArrangement = Message<"trainiac.model.TrackArrangement"> & {
  /**
   * @generated from field: repeated trainiac.model.TrackArrangement.Node nodes = 1;
   */
  nodes: TrackArrangement_Node[];
};

/**
 * Describes the message trainiac.model.TrackArrangement.
 * Use `create(TrackArrangementSchema)` to create a new message.
 */
export const TrackArrangementSchema: GenMessage<TrackArrangement> = /*@__PURE__*/
  messageDesc(file_model, 3);

/**
 * @generated from message trainiac.model.TrackArrangement.Node
 */
export type TrackArrangement_Node = Message<"trainiac.model.TrackArrangement.Node"> & {
  /**
   * @generated from oneof trainiac.model.TrackArrangement.Node.node
   */
  node: {
    /**
     * Defines a concourse-style track arrangement.
     *
     * @generated from field: trainiac.model.Concourse concourse = 1;
     */
    value: Concourse;
    case: "concourse";
  } | {
    /**
     * Defines a multi-concourse-style track arrangement.
     *
     * @generated from field: trainiac.model.MultiConcourse multi_concourse = 2;
     */
    value: MultiConcourse;
    case: "multiConcourse";
  } | {
    /**
     * Defines an interlocking-style track arrangement.
     *
     * @generated from field: trainiac.model.Interlocking interlocking = 3;
     */
    value: Interlocking;
    case: "interlocking";
  } | {
    /**
     * Defines a terminus-style track arrangement.
     *
     * @generated from field: trainiac.model.Terminus terminus = 4;
     */
    value: Terminus;
    case: "terminus";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message trainiac.model.TrackArrangement.Node.
 * Use `create(TrackArrangement_NodeSchema)` to create a new message.
 */
export const TrackArrangement_NodeSchema: GenMessage<TrackArrangement_Node> = /*@__PURE__*/
  messageDesc(file_model, 3, 0);

/**
 * Defines a concourse. A concourse can have multiple tracks and
 * each track connnects to zero (in the case of a terminus track)
 * or one railway on both sides of the concourse.
 *
 * @generated from message trainiac.model.Concourse
 */
export type Concourse = Message<"trainiac.model.Concourse"> & {
  /**
   * The name of the concourse.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the concourse.
   *
   * @generated from field: trainiac.model.LocalizedString display_name = 2;
   */
  displayName?: LocalizedString;

  /**
   * Tracks of the concourse.
   *
   * @generated from field: repeated trainiac.model.Concourse.Track tracks = 4;
   */
  tracks: Concourse_Track[];
};

/**
 * Describes the message trainiac.model.Concourse.
 * Use `create(ConcourseSchema)` to create a new message.
 */
export const ConcourseSchema: GenMessage<Concourse> = /*@__PURE__*/
  messageDesc(file_model, 4);

/**
 * Defines a track at a railway concourse.
 *
 * @generated from message trainiac.model.Concourse.Track
 */
export type Concourse_Track = Message<"trainiac.model.Concourse.Track"> & {
  /**
   * @generated from field: trainiac.model.TrackRailway incoming = 1;
   */
  incoming?: TrackRailway;

  /**
   * @generated from field: trainiac.model.TrackRailway outgoing = 2;
   */
  outgoing?: TrackRailway;
};

/**
 * Describes the message trainiac.model.Concourse.Track.
 * Use `create(Concourse_TrackSchema)` to create a new message.
 */
export const Concourse_TrackSchema: GenMessage<Concourse_Track> = /*@__PURE__*/
  messageDesc(file_model, 4, 0);

/**
 * Defines a station with multiple concourses in parallel.
 *
 * @generated from message trainiac.model.MultiConcourse
 */
export type MultiConcourse = Message<"trainiac.model.MultiConcourse"> & {
  /**
   * @generated from field: repeated trainiac.model.Concourse named_concourses = 1;
   */
  namedConcourses: Concourse[];
};

/**
 * Describes the message trainiac.model.MultiConcourse.
 * Use `create(MultiConcourseSchema)` to create a new message.
 */
export const MultiConcourseSchema: GenMessage<MultiConcourse> = /*@__PURE__*/
  messageDesc(file_model, 5);

/**
 * Defines an interlocking station.
 *
 * @generated from message trainiac.model.Interlocking
 */
export type Interlocking = Message<"trainiac.model.Interlocking"> & {
  /**
   * @generated from field: repeated trainiac.model.Interlocking.Track tracks = 4;
   */
  tracks: Interlocking_Track[];
};

/**
 * Describes the message trainiac.model.Interlocking.
 * Use `create(InterlockingSchema)` to create a new message.
 */
export const InterlockingSchema: GenMessage<Interlocking> = /*@__PURE__*/
  messageDesc(file_model, 6);

/**
 * @generated from message trainiac.model.Interlocking.Track
 */
export type Interlocking_Track = Message<"trainiac.model.Interlocking.Track"> & {
  /**
   * @generated from field: repeated trainiac.model.TrackRailway incomings = 2;
   */
  incomings: TrackRailway[];

  /**
   * @generated from field: repeated trainiac.model.TrackRailway outgoings = 3;
   */
  outgoings: TrackRailway[];
};

/**
 * Describes the message trainiac.model.Interlocking.Track.
 * Use `create(Interlocking_TrackSchema)` to create a new message.
 */
export const Interlocking_TrackSchema: GenMessage<Interlocking_Track> = /*@__PURE__*/
  messageDesc(file_model, 6, 0);

/**
 * Defines a terminus station.
 *
 * @generated from message trainiac.model.Terminus
 */
export type Terminus = Message<"trainiac.model.Terminus"> & {
  /**
   * @generated from field: repeated trainiac.model.TrackRailway incomings = 1;
   */
  incomings: TrackRailway[];
};

/**
 * Describes the message trainiac.model.Terminus.
 * Use `create(TerminusSchema)` to create a new message.
 */
export const TerminusSchema: GenMessage<Terminus> = /*@__PURE__*/
  messageDesc(file_model, 7);

/**
 * @generated from message trainiac.model.Station
 */
export type Station = Message<"trainiac.model.Station"> & {
  /**
   * The name of the station.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the station.
   *
   * @generated from field: trainiac.model.LocalizedString display_name = 2;
   */
  displayName?: LocalizedString;

  /**
   * The name of the railway to define the direction of the concourse.
   * The outbound direction of the referenced railway is the incoming
   * direction of the station.
   *
   * @generated from field: string direction_reference = 3;
   */
  directionReference: string;

  /**
   * @generated from field: trainiac.model.TrackArrangement track_arrangement = 4;
   */
  trackArrangement?: TrackArrangement;

  /**
   * The service of this station.
   *
   * @generated from field: trainiac.model.Station.Service service = 5;
   */
  service: Station_Service;
};

/**
 * Describes the message trainiac.model.Station.
 * Use `create(StationSchema)` to create a new message.
 */
export const StationSchema: GenMessage<Station> = /*@__PURE__*/
  messageDesc(file_model, 8);

/**
 * @generated from enum trainiac.model.Station.Service
 */
export enum Station_Service {
  /**
   * @generated from enum value: SERVICE_UNSPECIFIED = 0;
   */
  SERVICE_UNSPECIFIED = 0,

  /**
   * The station is not in service.
   *
   * @generated from enum value: CLOSED = 1;
   */
  CLOSED = 1,

  /**
   * The station is used as a signal box only.
   *
   * @generated from enum value: SIGNAL = 2;
   */
  SIGNAL = 2,

  /**
   * The station serves cargo trains only.
   *
   * @generated from enum value: CARGO = 3;
   */
  CARGO = 3,

  /**
   * The station serves passenger trains only.
   *
   * @generated from enum value: PASSENGER = 4;
   */
  PASSENGER = 4,

  /**
   * The station serves both cargo and passenger trains.
   *
   * @generated from enum value: PASSENGER_CARGO = 5;
   */
  PASSENGER_CARGO = 5,
}

/**
 * Describes the enum trainiac.model.Station.Service.
 */
export const Station_ServiceSchema: GenEnum<Station_Service> = /*@__PURE__*/
  enumDesc(file_model, 8, 0);

/**
 * The spec of a railway, or an interval of a railway.
 *
 * @generated from message trainiac.model.RailwaySpec
 */
export type RailwaySpec = Message<"trainiac.model.RailwaySpec"> & {
  /**
   * @generated from field: int32 design_speed = 1;
   */
  designSpeed: number;

  /**
   * The service of this railway.
   *
   * @generated from field: trainiac.model.RailwaySpec.Service service = 2;
   */
  service: RailwaySpec_Service;

  /**
   * The operating state of this railway.
   *
   * @generated from field: trainiac.model.RailwaySpec.OperateState operate_state = 3;
   */
  operateState: RailwaySpec_OperateState;

  /**
   * The track configuration of this railway.
   *
   * @generated from field: trainiac.model.RailwaySpec.Track track = 4;
   */
  track: RailwaySpec_Track;

  /**
   * The hierachy of this railway.
   *
   * @generated from field: trainiac.model.RailwaySpec.Hierachy hierachy = 5;
   */
  hierachy: RailwaySpec_Hierachy;
};

/**
 * Describes the message trainiac.model.RailwaySpec.
 * Use `create(RailwaySpecSchema)` to create a new message.
 */
export const RailwaySpecSchema: GenMessage<RailwaySpec> = /*@__PURE__*/
  messageDesc(file_model, 9);

/**
 * @generated from enum trainiac.model.RailwaySpec.Service
 */
export enum RailwaySpec_Service {
  /**
   * @generated from enum value: SERVICE_UNSPECIFIED = 0;
   */
  SERVICE_UNSPECIFIED = 0,

  /**
   * This railway is passenger only.
   *
   * @generated from enum value: PASSENGER = 1;
   */
  PASSENGER = 1,

  /**
   * This railway is cargo only.
   *
   * @generated from enum value: CAGRO = 2;
   */
  CAGRO = 2,

  /**
   * This railway serves both passenger and cargo trains.
   *
   * @generated from enum value: PASSENGER_CARGO = 3;
   */
  PASSENGER_CARGO = 3,
}

/**
 * Describes the enum trainiac.model.RailwaySpec.Service.
 */
export const RailwaySpec_ServiceSchema: GenEnum<RailwaySpec_Service> = /*@__PURE__*/
  enumDesc(file_model, 9, 0);

/**
 * @generated from enum trainiac.model.RailwaySpec.OperateState
 */
export enum RailwaySpec_OperateState {
  /**
   * @generated from enum value: OPERATE_STATE_UNSPECIFIED = 0;
   */
  OPERATE_STATE_UNSPECIFIED = 0,

  /**
   * This railway is operating.
   *
   * @generated from enum value: OPERATING = 1;
   */
  OPERATING = 1,

  /**
   * This railway is under construction.
   *
   * @generated from enum value: CONSTRUCTING = 2;
   */
  CONSTRUCTING = 2,

  /**
   * THis railway is under design.
   *
   * @generated from enum value: DESIGNING = 3;
   */
  DESIGNING = 3,
}

/**
 * Describes the enum trainiac.model.RailwaySpec.OperateState.
 */
export const RailwaySpec_OperateStateSchema: GenEnum<RailwaySpec_OperateState> = /*@__PURE__*/
  enumDesc(file_model, 9, 1);

/**
 * @generated from enum trainiac.model.RailwaySpec.Track
 */
export enum RailwaySpec_Track {
  /**
   * @generated from enum value: TRACK_UNSPECIFIED = 0;
   */
  TRACK_UNSPECIFIED = 0,

  /**
   * This railway is a single-track railway.
   *
   * @generated from enum value: SINGLE_TRACK = 1;
   */
  SINGLE_TRACK = 1,

  /**
   * This railway is a double-track railway.
   *
   * @generated from enum value: DOUBLE_TRACK = 2;
   */
  DOUBLE_TRACK = 2,
}

/**
 * Describes the enum trainiac.model.RailwaySpec.Track.
 */
export const RailwaySpec_TrackSchema: GenEnum<RailwaySpec_Track> = /*@__PURE__*/
  enumDesc(file_model, 9, 2);

/**
 * @generated from enum trainiac.model.RailwaySpec.Hierachy
 */
export enum RailwaySpec_Hierachy {
  /**
   * @generated from enum value: HIERACHY_UNSPECIFIED = 0;
   */
  HIERACHY_UNSPECIFIED = 0,

  /**
   * This railway is the main line.
   *
   * @generated from enum value: MAIN = 1;
   */
  MAIN = 1,

  /**
   * This railway is a branch line.
   *
   * @generated from enum value: BRANCH = 2;
   */
  BRANCH = 2,

  /**
   * This railway is a connector.
   *
   * @generated from enum value: CONNECTOR = 3;
   */
  CONNECTOR = 3,
}

/**
 * Describes the enum trainiac.model.RailwaySpec.Hierachy.
 */
export const RailwaySpec_HierachySchema: GenEnum<RailwaySpec_Hierachy> = /*@__PURE__*/
  enumDesc(file_model, 9, 3);

/**
 * @generated from message trainiac.model.Interval
 */
export type Interval = Message<"trainiac.model.Interval"> & {
  /**
   * @generated from oneof trainiac.model.Interval.interval
   */
  interval: {
    /**
     * @generated from field: trainiac.model.Interval.ExistingInterval existing_interval = 1;
     */
    value: Interval_ExistingInterval;
    case: "existingInterval";
  } | {
    /**
     * @generated from field: trainiac.model.Interval.NewInterval new_interval = 2;
     */
    value: Interval_NewInterval;
    case: "newInterval";
  } | { case: undefined; value?: undefined };

  /**
   * The spec of this railway interval, if different from
   * other parts of the railway.
   *
   * @generated from field: trainiac.model.RailwaySpec railway_spec_override = 3;
   */
  railwaySpecOverride?: RailwaySpec;
};

/**
 * Describes the message trainiac.model.Interval.
 * Use `create(IntervalSchema)` to create a new message.
 */
export const IntervalSchema: GenMessage<Interval> = /*@__PURE__*/
  messageDesc(file_model, 10);

/**
 * The interval reuses part of an existing railway.
 *
 * @generated from message trainiac.model.Interval.ExistingInterval
 */
export type Interval_ExistingInterval = Message<"trainiac.model.Interval.ExistingInterval"> & {
  /**
   * The existing railway reused.
   *
   * @generated from field: string railway = 1;
   */
  railway: string;

  /**
   * The start station of the reused part. This field and
   * `end_station` must both be set or both be unset. If both
   * of these two fields are unset, the entire railway is
   * reused.
   *
   * @generated from field: string start_station = 2;
   */
  startStation: string;

  /**
   * The end station of the reused part. This field and
   * `start_station` must both be set or both be unset. If both
   * of these two fields are unset, the entire railway is
   * reused.
   *
   * @generated from field: string end_station = 3;
   */
  endStation: string;

  /**
   * Upgrade work is done for this interval.
   *
   * @generated from field: bool upgraded = 4;
   */
  upgraded: boolean;
};

/**
 * Describes the message trainiac.model.Interval.ExistingInterval.
 * Use `create(Interval_ExistingIntervalSchema)` to create a new message.
 */
export const Interval_ExistingIntervalSchema: GenMessage<Interval_ExistingInterval> = /*@__PURE__*/
  messageDesc(file_model, 10, 0);

/**
 * The interval is newly constructed.
 *
 * @generated from message trainiac.model.Interval.NewInterval
 */
export type Interval_NewInterval = Message<"trainiac.model.Interval.NewInterval"> & {
  /**
   * The list of stations in the outbound order.
   *
   * @generated from field: repeated string stations = 2;
   */
  stations: string[];
};

/**
 * Describes the message trainiac.model.Interval.NewInterval.
 * Use `create(Interval_NewIntervalSchema)` to create a new message.
 */
export const Interval_NewIntervalSchema: GenMessage<Interval_NewInterval> = /*@__PURE__*/
  messageDesc(file_model, 10, 1);

/**
 * The route of a railway.
 *
 * @generated from message trainiac.model.Route
 */
export type Route = Message<"trainiac.model.Route"> & {
  /**
   * @generated from field: repeated trainiac.model.Interval intervals = 1;
   */
  intervals: Interval[];
};

/**
 * Describes the message trainiac.model.Route.
 * Use `create(RouteSchema)` to create a new message.
 */
export const RouteSchema: GenMessage<Route> = /*@__PURE__*/
  messageDesc(file_model, 11);

/**
 * Defines a railway.
 *
 * @generated from message trainiac.model.Railway
 */
export type Railway = Message<"trainiac.model.Railway"> & {
  /**
   * The name of the railway.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the railway.
   *
   * @generated from field: trainiac.model.LocalizedString display_name = 2;
   */
  displayName?: LocalizedString;

  /**
   * The spec of the railway.
   *
   * @generated from field: trainiac.model.RailwaySpec railway_spec = 3;
   */
  railwaySpec?: RailwaySpec;

  /**
   * The name state of this railway.
   *
   * @generated from field: trainiac.model.Railway.NameState name_state = 4;
   */
  nameState: Railway_NameState;

  /**
   * The route of the railway.
   *
   * @generated from field: trainiac.model.Route route = 5;
   */
  route?: Route;
};

/**
 * Describes the message trainiac.model.Railway.
 * Use `create(RailwaySchema)` to create a new message.
 */
export const RailwaySchema: GenMessage<Railway> = /*@__PURE__*/
  messageDesc(file_model, 12);

/**
 * @generated from enum trainiac.model.Railway.NameState
 */
export enum Railway_NameState {
  /**
   * @generated from enum value: RECORD_STATE_UNSPECIFIED = 0;
   */
  RECORD_STATE_UNSPECIFIED = 0,

  /**
   * The name is still active.
   *
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * The name is deprecated.
   *
   * @generated from enum value: DEPRECATED = 2;
   */
  DEPRECATED = 2,
}

/**
 * Describes the enum trainiac.model.Railway.NameState.
 */
export const Railway_NameStateSchema: GenEnum<Railway_NameState> = /*@__PURE__*/
  enumDesc(file_model, 12, 0);

/**
 * Defines a railway line.
 *
 * @generated from message trainiac.model.Line
 */
export type Line = Message<"trainiac.model.Line"> & {
  /**
   * The name of the line.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the line.
   *
   * @generated from field: trainiac.model.LocalizedString display_name = 2;
   */
  displayName?: LocalizedString;

  /**
   * The route of the line.
   *
   * @generated from field: trainiac.model.Route route = 3;
   */
  route?: Route;
};

/**
 * Describes the message trainiac.model.Line.
 * Use `create(LineSchema)` to create a new message.
 */
export const LineSchema: GenMessage<Line> = /*@__PURE__*/
  messageDesc(file_model, 13);

/**
 * Defines a corridor.
 *
 * @generated from message trainiac.model.Corridor
 */
export type Corridor = Message<"trainiac.model.Corridor"> & {
  /**
   * The name of the corridor.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The display name of the corridor.
   *
   * @generated from field: trainiac.model.LocalizedString display_name = 2;
   */
  displayName?: LocalizedString;

  /**
   * The lines of the corridor.
   *
   * @generated from field: repeated trainiac.model.Line lines = 3;
   */
  lines: Line[];
};

/**
 * Describes the message trainiac.model.Corridor.
 * Use `create(CorridorSchema)` to create a new message.
 */
export const CorridorSchema: GenMessage<Corridor> = /*@__PURE__*/
  messageDesc(file_model, 14);

