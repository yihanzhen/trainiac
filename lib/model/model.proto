syntax = "proto3";

package trainiac.model;

// The generic message for localized strings.
message LocalizedString {
  // A map from language codes to the localized strings.
  map<string, string> locales = 1;

  // The default value to use when the locale is not yet supported,
  // or no locale information is given.
  string default_value = 2;
}

// The Railway that connects to a track at a station.
message TrackRailway {
  // The name of the railway that connects to the track.
  string railway = 1;

  enum Direction {
    DIRECTION_UNSPECIFIED = 0;

    SINGLE_TRACK_INBOUND = 1;

    SINGLE_TRACK_OUTBOUND = 2;

    SINGLE_TRACK_TWO_WAY = 3;

    DOUBLE_TRACK = 4;
  }

  // How the railway is connected.
  Direction direction = 2;
}

// How the tracks are arranged at a station.
message TrackArrangement {
  message Node {
    oneof node {
      // Defines a concourse-style track arrangement.
      Concourse concourse = 1;

      // Defines a multi-concourse-style track arrangement.
      MultiConcourse multi_concourse = 2;

      // Defines an interlocking-style track arrangement.
      Interlocking interlocking = 3;

      // Defines a terminus-style track arrangement.
      Terminus terminus = 4;
    }
  }

  repeated Node nodes = 1;
}

message Concourse {
  LocalizedString name = 1;

  message Track {
    TrackLine incoming = 1;

    TrackLine outgoing = 2;
  }

  repeated Track tracks = 3;
}

message MultiConcourse {
  message NamedConcourse {
    LocalizedString name = 1;
    Concourse concourse = 2;
  }

  repeated NamedConcourse named_concourses = 1;
}

message Interlocking {
  message Track {
    repeated TrackLine incomings = 2;

    repeated TrackLine outgoings = 3;
  }

  repeated Track tracks = 4;
}

message Station {
  LocalizedString name = 1;

  oneof track_arrangement {
    Concourse default_concourse = 2;

    MultiConcourse concourses = 3;

    Signal signal = 4;
  }

  enum Service {
    SERVICE_UNSPECIFIED = 0;

    CLOSED = 1;

    SIGNAL = 2;

    CARGO = 3;

    PASSENGER = 4;

    PASSENGER_CARGO = 5;
  }

  Service service = 5;
}

message RailwaySpec {
  int32 design_speed = 2;

  enum Service {
    SERVICE_UNSPECIFIED = 0;
    PASSENGER = 1;
    PASSENGER_CARGO = 2;
    CAGRO = 3;
  }

  Usage Usage = 3;

  enum OperateState {
    OPERATE_STATE_UNSPECIFIED = 0;
    OPERATING = 1;
    CONSTRUCTING = 2;
    DESIGNING = 3;
  }

  OperateState operate_state = 4;

  enum Track {
    TRACK_UNSPECIFIED = 0;
    SINGLE_TRACK = 1;
    DOUBLE_TRACK = 2;
  }

  Track track = 5;

  enum Hierachy {
    HIERACHY_UNSPECIFIED = 0;
    MAIN = 1;
    BRANCH = 2;
    CONNECTOR = 3;
  }

  Hierachy hierachy = 6;

  enum Construction {
    CONSTRUCTION_UNSPECIFIED = 0;

    NEWLY_CONSTRUCTED = 1;

    UPGRADED = 2;
  }

  Construction construction = 7;
}

message Interval {
  message ExistingInterval {
    string railway = 1;

    string start_station = 2;

    string end_station = 3;
  }

  message NewInterval {
    RailwaySpec spec_override = 1;
    repeated string stations = 2;
  }

  oneof interval {
    ExistingInterval existing_interval = 1;

    NewInterval new_interval = 2;
  }
}

message Route {
  repeated Interval intervals = 1;
}

message Railway {
  LocalizedString name = 1;

  RailwaySpec railway_spec = 2;

  enum RecordState {
    RECORD_STATE_UNSPECIFIED = 0;
    ACTIVE = 1;
    DEPRECATED = 2;
  }

  RecordState record_state = 3;

  Route route = 4;
}

message Line {
  LocalizedString name = 1;

  Route route = 2;
}

message Corridor {
  LocalizedString name = 1;

  repeated Line lines = 2;
}
